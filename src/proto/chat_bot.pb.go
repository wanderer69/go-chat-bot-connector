// версия протобаф файла.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.0
// source: chat_bot.proto

// весь полученный из этого протобафа код добавляем в пакет _service

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
type ParsePhraseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SessionId   string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Phrase      string `protobuf:"bytes,3,opt,name=phrase,proto3" json:"phrase,omitempty"`
	SequenseNum int32  `protobuf:"varint,4,opt,name=sequense_num,json=sequenseNum,proto3" json:"sequense_num,omitempty"`
}

func (x *ParsePhraseRequest) Reset() {
	*x = ParsePhraseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParsePhraseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsePhraseRequest) ProtoMessage() {}

func (x *ParsePhraseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsePhraseRequest.ProtoReflect.Descriptor instead.
func (*ParsePhraseRequest) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{0}
}

func (x *ParsePhraseRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ParsePhraseRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ParsePhraseRequest) GetPhrase() string {
	if x != nil {
		return x.Phrase
	}
	return ""
}

func (x *ParsePhraseRequest) GetSequenseNum() int32 {
	if x != nil {
		return x.SequenseNum
	}
	return 0
}

type ParsePhraseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result  string  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error   *string `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	QueryId string  `protobuf:"bytes,3,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
}

func (x *ParsePhraseResponse) Reset() {
	*x = ParsePhraseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParsePhraseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParsePhraseResponse) ProtoMessage() {}

func (x *ParsePhraseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParsePhraseResponse.ProtoReflect.Descriptor instead.
func (*ParsePhraseResponse) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{1}
}

func (x *ParsePhraseResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ParsePhraseResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *ParsePhraseResponse) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

type CheckParsePhraseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId string `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
}

func (x *CheckParsePhraseRequest) Reset() {
	*x = CheckParsePhraseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckParsePhraseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckParsePhraseRequest) ProtoMessage() {}

func (x *CheckParsePhraseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckParsePhraseRequest.ProtoReflect.Descriptor instead.
func (*CheckParsePhraseRequest) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{2}
}

func (x *CheckParsePhraseRequest) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

type CheckParsePhraseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error  *string `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Phrase string  `protobuf:"bytes,3,opt,name=phrase,proto3" json:"phrase,omitempty"`
}

func (x *CheckParsePhraseResponse) Reset() {
	*x = CheckParsePhraseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckParsePhraseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckParsePhraseResponse) ProtoMessage() {}

func (x *CheckParsePhraseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckParsePhraseResponse.ProtoReflect.Descriptor instead.
func (*CheckParsePhraseResponse) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{3}
}

func (x *CheckParsePhraseResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *CheckParsePhraseResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *CheckParsePhraseResponse) GetPhrase() string {
	if x != nil {
		return x.Phrase
	}
	return ""
}

type Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelationList    string `protobuf:"bytes,1,opt,name=RelationList,proto3" json:"RelationList,omitempty"`
	PathToOpCorpora string `protobuf:"bytes,2,opt,name=PathToOpCorpora,proto3" json:"PathToOpCorpora,omitempty"`
	GrammaticsList  string `protobuf:"bytes,3,opt,name=GrammaticsList,proto3" json:"GrammaticsList,omitempty"`
}

func (x *Settings) Reset() {
	*x = Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings) ProtoMessage() {}

func (x *Settings) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings.ProtoReflect.Descriptor instead.
func (*Settings) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{4}
}

func (x *Settings) GetRelationList() string {
	if x != nil {
		return x.RelationList
	}
	return ""
}

func (x *Settings) GetPathToOpCorpora() string {
	if x != nil {
		return x.PathToOpCorpora
	}
	return ""
}

func (x *Settings) GetGrammaticsList() string {
	if x != nil {
		return x.GrammaticsList
	}
	return ""
}

type SetSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State    string    `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Settings *Settings `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *SetSettingsRequest) Reset() {
	*x = SetSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSettingsRequest) ProtoMessage() {}

func (x *SetSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSettingsRequest.ProtoReflect.Descriptor instead.
func (*SetSettingsRequest) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{5}
}

func (x *SetSettingsRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SetSettingsRequest) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type SetSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error  *string `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
}

func (x *SetSettingsResponse) Reset() {
	*x = SetSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSettingsResponse) ProtoMessage() {}

func (x *SetSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSettingsResponse.ProtoReflect.Descriptor instead.
func (*SetSettingsResponse) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{6}
}

func (x *SetSettingsResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *SetSettingsResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

// Statistic info
type StatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode string `protobuf:"bytes,1,opt,name=mode,proto3" json:"mode,omitempty"`
}

func (x *StatRequest) Reset() {
	*x = StatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatRequest) ProtoMessage() {}

func (x *StatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatRequest.ProtoReflect.Descriptor instead.
func (*StatRequest) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{7}
}

func (x *StatRequest) GetMode() string {
	if x != nil {
		return x.Mode
	}
	return ""
}

type StatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string  `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Error  *string `protobuf:"bytes,2,opt,name=error,proto3,oneof" json:"error,omitempty"`
	Info   string  `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *StatResponse) Reset() {
	*x = StatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatResponse) ProtoMessage() {}

func (x *StatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatResponse.ProtoReflect.Descriptor instead.
func (*StatResponse) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{8}
}

func (x *StatResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *StatResponse) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *StatResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type CheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *CheckRequest) Reset() {
	*x = CheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRequest) ProtoMessage() {}

func (x *CheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRequest.ProtoReflect.Descriptor instead.
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{9}
}

func (x *CheckRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type CheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CheckResponse) Reset() {
	*x = CheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chat_bot_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResponse) ProtoMessage() {}

func (x *CheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_bot_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResponse.ProtoReflect.Descriptor instead.
func (*CheckResponse) Descriptor() ([]byte, []int) {
	return file_chat_bot_proto_rawDescGZIP(), []int{10}
}

func (x *CheckResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_chat_bot_proto protoreflect.FileDescriptor

var file_chat_bot_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x12, 0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x73, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x6d, 0x0a, 0x13,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x34, 0x0a, 0x17, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x64, 0x22, 0x6f, 0x0a, 0x18, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x73, 0x65, 0x50,
	0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x88, 0x01, 0x01,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x80, 0x01, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x61, 0x74, 0x68, 0x54, 0x6f, 0x4f, 0x70, 0x43,
	0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50, 0x61,
	0x74, 0x68, 0x54, 0x6f, 0x4f, 0x70, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x12, 0x26, 0x0a,
	0x0e, 0x47, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x69, 0x63, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x47, 0x72, 0x61, 0x6d, 0x6d, 0x61, 0x74, 0x69, 0x63,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x36, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x52, 0x0a, 0x13, 0x53, 0x65, 0x74,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x21, 0x0a,
	0x0b, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x22, 0x5f, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x24, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x27, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x32, 0xc7, 0x03, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x74, 0x42, 0x6f, 0x74, 0x12, 0x5c, 0x0a, 0x0b,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x24, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x62, 0x6f, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x74, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x10, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x29,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x68, 0x72, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x62, 0x6f, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x50, 0x61, 0x72, 0x73, 0x65, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1d, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x62, 0x6f, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a,
	0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62,
	0x6f, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x62,
	0x6f, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chat_bot_proto_rawDescOnce sync.Once
	file_chat_bot_proto_rawDescData = file_chat_bot_proto_rawDesc
)

func file_chat_bot_proto_rawDescGZIP() []byte {
	file_chat_bot_proto_rawDescOnce.Do(func() {
		file_chat_bot_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_bot_proto_rawDescData)
	})
	return file_chat_bot_proto_rawDescData
}

var file_chat_bot_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_chat_bot_proto_goTypes = []interface{}{
	(*ParsePhraseRequest)(nil),       // 0: chat_bot_service.ParsePhraseRequest
	(*ParsePhraseResponse)(nil),      // 1: chat_bot_service.ParsePhraseResponse
	(*CheckParsePhraseRequest)(nil),  // 2: chat_bot_service.CheckParsePhraseRequest
	(*CheckParsePhraseResponse)(nil), // 3: chat_bot_service.CheckParsePhraseResponse
	(*Settings)(nil),                 // 4: chat_bot_service.Settings
	(*SetSettingsRequest)(nil),       // 5: chat_bot_service.SetSettingsRequest
	(*SetSettingsResponse)(nil),      // 6: chat_bot_service.SetSettingsResponse
	(*StatRequest)(nil),              // 7: chat_bot_service.StatRequest
	(*StatResponse)(nil),             // 8: chat_bot_service.StatResponse
	(*CheckRequest)(nil),             // 9: chat_bot_service.CheckRequest
	(*CheckResponse)(nil),            // 10: chat_bot_service.CheckResponse
}
var file_chat_bot_proto_depIdxs = []int32{
	4,  // 0: chat_bot_service.SetSettingsRequest.settings:type_name -> chat_bot_service.Settings
	0,  // 1: chat_bot_service.ChatBot.ParsePhrase:input_type -> chat_bot_service.ParsePhraseRequest
	2,  // 2: chat_bot_service.ChatBot.CheckParsePhrase:input_type -> chat_bot_service.CheckParsePhraseRequest
	5,  // 3: chat_bot_service.ChatBot.SetSettings:input_type -> chat_bot_service.SetSettingsRequest
	7,  // 4: chat_bot_service.ChatBot.Stat:input_type -> chat_bot_service.StatRequest
	9,  // 5: chat_bot_service.ChatBot.Check:input_type -> chat_bot_service.CheckRequest
	1,  // 6: chat_bot_service.ChatBot.ParsePhrase:output_type -> chat_bot_service.ParsePhraseResponse
	3,  // 7: chat_bot_service.ChatBot.CheckParsePhrase:output_type -> chat_bot_service.CheckParsePhraseResponse
	6,  // 8: chat_bot_service.ChatBot.SetSettings:output_type -> chat_bot_service.SetSettingsResponse
	8,  // 9: chat_bot_service.ChatBot.Stat:output_type -> chat_bot_service.StatResponse
	10, // 10: chat_bot_service.ChatBot.Check:output_type -> chat_bot_service.CheckResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_chat_bot_proto_init() }
func file_chat_bot_proto_init() {
	if File_chat_bot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chat_bot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParsePhraseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParsePhraseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckParsePhraseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckParsePhraseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chat_bot_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_chat_bot_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_chat_bot_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_chat_bot_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_chat_bot_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chat_bot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_bot_proto_goTypes,
		DependencyIndexes: file_chat_bot_proto_depIdxs,
		MessageInfos:      file_chat_bot_proto_msgTypes,
	}.Build()
	File_chat_bot_proto = out.File
	file_chat_bot_proto_rawDesc = nil
	file_chat_bot_proto_goTypes = nil
	file_chat_bot_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChatBotClient is the client API for ChatBot service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatBotClient interface {
	ParsePhrase(ctx context.Context, in *ParsePhraseRequest, opts ...grpc.CallOption) (*ParsePhraseResponse, error)
	CheckParsePhrase(ctx context.Context, in *CheckParsePhraseRequest, opts ...grpc.CallOption) (*CheckParsePhraseResponse, error)
	SetSettings(ctx context.Context, in *SetSettingsRequest, opts ...grpc.CallOption) (*SetSettingsResponse, error)
	Stat(ctx context.Context, in *StatRequest, opts ...grpc.CallOption) (*StatResponse, error)
	Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckResponse, error)
}

type chatBotClient struct {
	cc grpc.ClientConnInterface
}

func NewChatBotClient(cc grpc.ClientConnInterface) ChatBotClient {
	return &chatBotClient{cc}
}

func (c *chatBotClient) ParsePhrase(ctx context.Context, in *ParsePhraseRequest, opts ...grpc.CallOption) (*ParsePhraseResponse, error) {
	out := new(ParsePhraseResponse)
	err := c.cc.Invoke(ctx, "/chat_bot_service.ChatBot/ParsePhrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatBotClient) CheckParsePhrase(ctx context.Context, in *CheckParsePhraseRequest, opts ...grpc.CallOption) (*CheckParsePhraseResponse, error) {
	out := new(CheckParsePhraseResponse)
	err := c.cc.Invoke(ctx, "/chat_bot_service.ChatBot/CheckParsePhrase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatBotClient) SetSettings(ctx context.Context, in *SetSettingsRequest, opts ...grpc.CallOption) (*SetSettingsResponse, error) {
	out := new(SetSettingsResponse)
	err := c.cc.Invoke(ctx, "/chat_bot_service.ChatBot/SetSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatBotClient) Stat(ctx context.Context, in *StatRequest, opts ...grpc.CallOption) (*StatResponse, error) {
	out := new(StatResponse)
	err := c.cc.Invoke(ctx, "/chat_bot_service.ChatBot/Stat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatBotClient) Check(ctx context.Context, in *CheckRequest, opts ...grpc.CallOption) (*CheckResponse, error) {
	out := new(CheckResponse)
	err := c.cc.Invoke(ctx, "/chat_bot_service.ChatBot/Check", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChatBotServer is the server API for ChatBot service.
type ChatBotServer interface {
	ParsePhrase(context.Context, *ParsePhraseRequest) (*ParsePhraseResponse, error)
	CheckParsePhrase(context.Context, *CheckParsePhraseRequest) (*CheckParsePhraseResponse, error)
	SetSettings(context.Context, *SetSettingsRequest) (*SetSettingsResponse, error)
	Stat(context.Context, *StatRequest) (*StatResponse, error)
	Check(context.Context, *CheckRequest) (*CheckResponse, error)
}

// UnimplementedChatBotServer can be embedded to have forward compatible implementations.
type UnimplementedChatBotServer struct {
}

func (*UnimplementedChatBotServer) ParsePhrase(context.Context, *ParsePhraseRequest) (*ParsePhraseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ParsePhrase not implemented")
}
func (*UnimplementedChatBotServer) CheckParsePhrase(context.Context, *CheckParsePhraseRequest) (*CheckParsePhraseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckParsePhrase not implemented")
}
func (*UnimplementedChatBotServer) SetSettings(context.Context, *SetSettingsRequest) (*SetSettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSettings not implemented")
}
func (*UnimplementedChatBotServer) Stat(context.Context, *StatRequest) (*StatResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stat not implemented")
}
func (*UnimplementedChatBotServer) Check(context.Context, *CheckRequest) (*CheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Check not implemented")
}

func RegisterChatBotServer(s *grpc.Server, srv ChatBotServer) {
	s.RegisterService(&_ChatBot_serviceDesc, srv)
}

func _ChatBot_ParsePhrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParsePhraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatBotServer).ParsePhrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat_bot_service.ChatBot/ParsePhrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatBotServer).ParsePhrase(ctx, req.(*ParsePhraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatBot_CheckParsePhrase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckParsePhraseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatBotServer).CheckParsePhrase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat_bot_service.ChatBot/CheckParsePhrase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatBotServer).CheckParsePhrase(ctx, req.(*CheckParsePhraseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatBot_SetSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatBotServer).SetSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat_bot_service.ChatBot/SetSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatBotServer).SetSettings(ctx, req.(*SetSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatBot_Stat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatBotServer).Stat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat_bot_service.ChatBot/Stat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatBotServer).Stat(ctx, req.(*StatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatBot_Check_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatBotServer).Check(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chat_bot_service.ChatBot/Check",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatBotServer).Check(ctx, req.(*CheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ChatBot_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chat_bot_service.ChatBot",
	HandlerType: (*ChatBotServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ParsePhrase",
			Handler:    _ChatBot_ParsePhrase_Handler,
		},
		{
			MethodName: "CheckParsePhrase",
			Handler:    _ChatBot_CheckParsePhrase_Handler,
		},
		{
			MethodName: "SetSettings",
			Handler:    _ChatBot_SetSettings_Handler,
		},
		{
			MethodName: "Stat",
			Handler:    _ChatBot_Stat_Handler,
		},
		{
			MethodName: "Check",
			Handler:    _ChatBot_Check_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chat_bot.proto",
}
